<div class="modal-header">
  <% title_half = (params[:action] == 'new' or params[:action] == 'create' or params[:add_more].present?) ? 'Add' : 'Edit' %>
  <h5 class="modal-title"><%= title_half %> Event</h5>
  <div id="flashMessage", class="inner_flash_message"></div>
</div>
<div class="modal-body">
  <%= form_for [venue, event], remote: true do |f| %>
    <% if params[:group_id].present? %>
      <%= f.hidden_field :group_id, value: @root_group_id %>
    <% else %>
      <div class="form-group">
        <%= f.label :title, 'Event Title', class: 'text-capitalize fs-17 asterisk' %><br />
        <%= f.text_field :title, class:"form-control", placeholder:"Enter Title", required: true  %>
      </div>
      <div class="form-group">
        <%= f.label :start_date, class: 'text-capitalize fs-17 asterisk' %><br />
        <%= f.text_field :start_date, class:"form-control datepicker", placeholder:"Select Start Date", required: true , value: pretty_date(f.object.start_date), autocomplete: 'off', onkeydown: "return false;" %>
        <ul class="parsley-errors-list filled" id="parsley-id-5" aria-hidden="false">
          <li class="parsley-required" id="start-date-msg" style="display: none">Start Date should be less than End Date.</li>
        </ul>
      </div>
      <div class="form-group">
        <%= f.label :start_time, class: 'text-capitalize fs-17 asterisk' %><br />
        <%= f.text_field :start_time, class:"form-control timepicker", placeholder:"Select Start Time", required: true, value: f.object.start_time.try(:strftime, "%I:%M %p"), autocomplete: 'off', onkeydown: "return false;" %>
        <ul class="parsley-errors-list filled" id="parsley-id-5" aria-hidden="false">
          <li class="parsley-required" id="start-time-msg" style="display: none">Start Time should be less than End Time.</li>
        </ul>
      </div>
      <div class="form-group">
        <%= f.label :end_date, class: 'text-capitalize fs-17 asterisk' %><br />
        <%= f.text_field :end_date, class:"form-control datepicker", placeholder:"Select End Date", required: true, value: pretty_date(f.object.end_date), autocomplete: 'off', onkeydown: "return false;" %>
        <ul class="parsley-errors-list filled" id="parsley-id-5" aria-hidden="false">
          <li class="parsley-required" id="end-date-msg" style="display: none">End Date should be greater than Start Date.</li>
        </ul>
      </div>
      <div class="form-group">
        <%= f.label :end_time, class: 'text-capitalize fs-17 asterisk' %><br />
        <%= f.text_field :end_time, class:"form-control timepicker", placeholder:"Select End Time", required: true, value: f.object.end_time.try(:strftime, "%I:%M %p"), autocomplete: 'off', onkeydown: "return false;" %>
        <ul class="parsley-errors-list filled" id="parsley-id-5" aria-hidden="false">
          <li class="parsley-required" id="end-time-msg" style="display: none">End Time should be greater than Start Time.</li>
        </ul>
      </div>
    <% end %>
    <% group.fields.each do |field| %>
      <div class="form-group">
        <%= render partial: 'forms/field', locals: {f: f, field_name: field.name, field_label: field.label, column_type: field.column_type, data: data, custom: field.custom, field: field, value: field.column_type == 'File' ? '' : event.send(field.name)} %>
      </div>
    <% end %>
    <% unless params[:group_id].present? %>
      <div class="form-group event_brands_fields">
        <%= label_tag 'Add Brand', 'Add Brand', class: 'text-capitalize fs-17 asterisk' %><br />
        <%= f.select :brand_ids, options_for_select(brand_option(Brand.all), value_of_brands_for_select(f.object)), {},multiple: true, required: true, title: 'Select Brands', class: 'form-control select_picker select2_picker multi_select', data: { "live-search": true } %>
        <%#= f.fields_for :event_brands, f.object.event_brands do |event_brand| %>
          <%#= render 'event_brand_fields', f: event_brand %>
        <%# end %>
        <%# <div class="links font-weight-bold mt-4"> %>
          <%#= link_to_add_association '+ Add More', f, :event_brands, class: 'fs-16 add_more_fields' %>
        <%# </div> %>
        <%# <ul class="parsley-errors-list filled" id="parsley-id-5" aria-hidden="false">
          <li class="parsley-required" id="brand-msg" style="display: none">Please select unique brands.</li>
        </ul> %>
      </div>
    <% end %>
    <% if params[:inside].present? %>
      <%= f.hidden_field :inside, value: true %>
    <% end %>
    <div class="modal-footer modal-footer-fixed">
      <% save_button_title = f.object.new_record? ? 'Add' : 'Save' %>
      <%= f.submit save_button_title, class: "btn btn-primary add_event" %>
      <% unless params[:group_id].present? %>
        <%= f.submit 'Add More', name: 'add_more', value: 'Add More', class: "btn btn-primary add_event" %>
      <% end %>
      <button type="button" class="btn btn-light bg-light-gray text-dark" data-dismiss="modal">Close</button>
    </div>
  <% end %>
</div>
<script>
  var brands = "<%= brand_option_js(Brand.all) %>"
  var brands_hash = JSON.parse(brands.replace(/&quot;/g, '\"').replace(/=&gt;/g, '\:'));
  var custom_field_html = $.parseHTML($('.add_fields').attr('data-association-insertion-template'))[0]
  var custom_field_jquery = $(custom_field_html)
  var selected_brands = []
  var valid_check_dropdown = false

  updateAddMoreFieldPartial = function(){
    let local_field_jqeury = custom_field_jquery
    local_field_jqeury.find('select').find('option').each(function(){
      if(selected_brands.includes($(this).val().toString())){
        $(this).remove();
      }
    })
    let local_string = local_field_jqeury[0].outerHTML;
    $('.add_fields').attr('data-association-insertion-template', local_string);
  }

  $('.brand_nested_fields').find('select :selected').each(function(){
    console.log($(this).val())
  })

  $('.add_more_fields').on('click', function(e){
    $('.brand_nested_fields').find('select').each(function(){
      if(!$(this).parsley().isValid()){
        valid_check_dropdown = false
        return;
      } else {
        valid_check_dropdown = true
      }
    })
    if(!valid_check_dropdown){
       $('.brand_nested_fields').find('select').each(function(){
         $(this).parsley().validate();
       })
      return false;
    }
  })

  $('.brand_nested_fields').find('select').on('change', function(){
    selected_brands = [];
    $('.brand_nested_fields').find('select :selected').each(function(){
      selected_brands.push($(this).val());
    })
    // updateAddMoreFieldPartial();
  })

  $(document).on('cocoon:before-insert', '.notes', function(e, insertedItem, originalEvent) {
    counter = $(".terminal-name").length - 1;
    checkName();
    insertedItem.find(".terminal-name").val("Terminal " + counter);
  })

  function hasDuplicates(arr) {
    return new Set(arr).size !== arr.length;
  }

  $(document).ready(function(){
    $('.select2_picker').select2({
      placeholder: 'Select Brands',
    });
    $('.timepicker').attr('autocomplete', 'off')
    $('.event_brands_fields').find('.nested-fields').first().find('span').addClass('d-none');

    // Custom Validation
    $('.add_event').on('click', function(){
      start_date = Date.parse($('#event_start_date').val())
      end_date = Date.parse($('#event_end_date').val())
      start_date_time = Date.parse($('#event_start_date').val() + ' ' + $('#event_start_time').val())
      end_date_time = Date.parse($('#event_end_date').val() + ' ' + $('#event_end_time').val())
      $('#start-time-msg').hide();
      $('#end-time-msg').hide();
      $('#start-date-msg').hide();
      $('#end-date-msg').hide();
      $('#brand-msg').hide();
      if (start_date == end_date){
        if (start_date_time > end_date_time) {
          $('#start-time-msg').show();
          $('#end-time-msg').show();
          return false;
        }
      } else {
        if (start_date > end_date) {
          $('#start-date-msg').show();
          $('#end-date-msg').show();
          return false;
        }
      }
      selected_brands_arr = [];
      $('.brand_select :selected').each( function() {
        selected_brands_arr.push($(this).val())
      })
      if(hasDuplicates(selected_brands_arr)){
        $('#brand-msg').show();
        return false;
      }
    })
  })
</script>
