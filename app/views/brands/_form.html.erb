<div class="modal-header">
  <% title_half = (params[:action] == 'new' or params[:action] == 'create' or params[:add_more].present?) ? 'Add' : 'Edit' %>
  <h5 class="modal-title"><%= title_half %> Brand</h5>
  <div id="flashMessage", class="inner_flash_message"></div>
</div>
<div class="modal-body">
  <%= form_for [venue, brand], remote: true do |f| %>
    <%= f.hidden_field :venue_id, value: params[:id]  %>
    <% if brand.brand_pic.attached? %>
      <%= image_tag brand.brand_pic, class: 'img-boundary image-profile-pic' %>
    <% else %>
      <%= image_pack_tag 'home/profile_placeholder.svg', class: 'img-boundary image-profile-pic' %>
    <% end %>
    <div class="content-profile-info d-inline badge badge-edit">
      <label class="btn-avatar">
        <i class="fa fa-pencil-alt fs-16 text-white"></i>
        <span style="display:none;">
          <%= f.file_field :brand_pic, class: "avatar", id: "avatar-upload1", onchange: "readURL(this)", accept: "image/*" %>
        </span>
        <ul class="parsley-errors-list filled" id="parsley-id-5" aria-hidden="false">
          <li class="parsley-required" id="image-val-msg1" style="display: none">Please upload only image.
          </li>
        </ul>
      </label>
    </div>
    <div class="form-group mt-2">
      <%= f.label :domain_name, 'Brand Domain Name', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :domain_name, class:"form-control", placeholder:"Enter Brand Domain Name", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :name, 'Brand Name', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :name, class:"form-control", placeholder:"Enter Brand Name", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :phone_number, 'Phone Number', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :phone_number, class:"form-control phone-number", placeholder:"Enter Phone Number", required: true, pattern: '((\(\d{3}\) ?)|(\d{3}-))?\d{3}-\d{4}', maxlength: 14 %>
    </div>

     <div class="form-group">
      <%= f.label :website_url, 'Website URL', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :website_url, class:"form-control", placeholder:"Enter Website URL", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :street_address, 'Street Address', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :street_address, class:"form-control", placeholder:"Enter Street Address", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :city, 'City', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :city, class:"form-control", placeholder:"Enter City", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :state, 'State', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :state, class:"form-control", placeholder:"Enter State", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :country, 'Country', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :country, class:"form-control", placeholder:"Enter Country", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :zip_code, 'Zip Code', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :zip_code, class:"form-control", placeholder:"Enter Zip Code", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :no_of_employee, 'No Of Employee', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.number_field :no_of_employee, class:"form-control", placeholder:"Enter No Of Employee", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :annual_revenue, 'Annual Revenue', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :annual_revenue, class:"form-control", placeholder:"Enter Annual Revenue", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :brand_owner, 'Brand Owner', class: 'text-capitalize fs-17 asterisk' %><br />
      <%= f.text_field :brand_owner, class:"form-control", placeholder:"Enter Brand Owner", required: true  %>
    </div>

    <div class="form-group">
      <%= f.label :description, class: 'text-capitalize fs-17' %><br />
      <%= f.text_area :description, class:"form-control h-auto", placeholder:"Enter Description", rows: 4 %>
    </div>

    <div class="modal-footer modal-footer-fixed">
      <% save_button_title = f.object.new_record? ? 'Add' : 'Save' %>
      <%= f.submit save_button_title, class: "btn btn-primary add_event" %>
      <%= f.submit 'Add More', name: 'add_more', value: 'Add More', class: "btn btn-primary add_event" %>
      <button type="button" class="btn btn-light bg-light-gray text-dark" data-dismiss="modal">Close</button>
    </div>
  <% end %>
</div>
<script type="text/javascript">
   function readURL(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();
      reader.onload = function(e) {
        $('.image-profile-pic').attr('src', e.target.result);
      }
      reader.readAsDataURL(input.files[0]);
    }
  }
  $("#avatar-upload1").change(function() {
    var val = $(this).val();
    if (!val.match(/(?:gif|jpg|png|bmp|jpeg|svg)$/)) {
      $("#image-val-msg").css('display', 'block');
      return false
    }
    $('#img_prev1').removeClass('hidden');
    readURL(this);
  });

  var autocomplete;
  var address1Field;
  var address2Field;
  var postalField;

  function initAutocomplete() {
    address1Field = document.querySelector("#brand_street_address");
    address2Field = document.querySelector("#address2");
    postalField = document.querySelector("#brand_zip_code");
    autocomplete = new google.maps.places.Autocomplete(address1Field, {
      fields: ["address_components", "geometry"],
      types: ["address"],
    });
    address1Field.focus();
    autocomplete.addListener("place_changed", fillInAddress);
  }

  function fillInAddress() {
    const place = autocomplete.getPlace();
    var address1 = "";
    var postcode = "";
    for (const component of place.address_components) {
      const componentType = component.types[0];

      switch (componentType) {
        case "street_number": {
          address1 = `${component.long_name} ${address1}`;
          break;
        }

        case "route": {
          address1 += component.short_name;
          break;
        }

        case "postal_code": {
          postcode = `${component.long_name}${postcode}`;
          break;
        }

        case "postal_code_suffix": {
          postcode = `${postcode}-${component.long_name}`;
          break;
        }
        case "locality":
          $("#brand_city").val(component.long_name)
          break;

        case "administrative_area_level_1": {
          $("#brand_state").val(component.long_name)
          break;
        }
        case "country":
          $("#brand_country").val(component.long_name)
          break;
      }
    }
    address1Field.value = address1;
    postalField.value = postcode;
    // address2Field.focus();
  }
</script>